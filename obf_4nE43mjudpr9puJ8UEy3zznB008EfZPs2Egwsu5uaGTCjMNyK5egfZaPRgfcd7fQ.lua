local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,15 -10 ),v7("\173\8","\231\131\38\32"),function(v42) if (v9(v42,2)==81) then local v101=0;while true do if (v101==0) then v30=v8(v11(v42,2 -1 ,1));return "";end end else local v102=0;local v103;while true do if (v102==0) then v103=v10(v8(v42,16));if v30 then local v121=v13(v103,v30);v30=nil;return v121;else return v103;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v104=0;local v105;while true do if (v104==0) then v105=(v43/((3 -1)^(v44-1)))%(2^(((v45-1) -(v44-(2 -1))) + 1)) ;return v105-(v105%1) ;end end else local v106=0;local v107;while true do if (0==v106) then v107=2^(v44-1) ;return (((v43%(v107 + v107))>=v107) and 1) or 0 ;end end end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47,v48=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v48 * 256) + v47 ;end local function v34() local v49,v50,v51,v52=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v52 * 16777216) + (v51 * 65536) + (v50 * 256) + v49 ;end local function v35() local v53=0;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v53==0) then v54=v34();v55=v34();v53=1;end if (v53==1) then v56=1;v57=(v31(v55,1,20) * (2^32)) + v54 ;v53=2;end if (v53==3) then if (v58==0) then if (v57==0) then return v59 * 0 ;else v58=1;v56=0;end elseif (v58==2047) then return ((v57==0) and (v59 * (1/(931 -(857 + 74))))) or (v59 * NaN) ;end return v16(v59,v58-1023 ) * (v56 + (v57/(2^52))) ;end if (v53==2) then v58=v31(v55,21,31);v59=((v31(v55,32)==1) and  -(620 -(555 + 64))) or 1 ;v53=3;end end end local function v36(v60) local v61;if  not v60 then v60=v34();if (v60==0) then return "";end end v61=v11(v27,v29,(v29 + v60) -1 );v29=v29 + v60 ;local v62={};for v76=1, #v61 do v62[v76]=v10(v9(v11(v61,v76,v76)));end return v14(v62);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v63={};local v64={};local v65={};local v66={v63,v64,nil,v65};local v67=v34();local v68={};for v78=1,v67 do local v79=0;local v80;local v81;while true do if (v79==1) then if (v80==1) then v81=v32()~=0 ;elseif (v80==2) then v81=v35();elseif (v80==3) then v81=v36();end v68[v78]=v81;break;end if (v79==0) then v80=v32();v81=nil;v79=1;end end end v66[3]=v32();for v82=1,v34() do local v83=0;local v84;while true do if (v83==0) then v84=v32();if (v31(v84,1,1)==0) then local v117=0;local v118;local v119;local v120;while true do if (v117==2) then if (v31(v119,1,1)==1) then v120[2]=v68[v120[2]];end if (v31(v119,1 + 1 ,2)==1) then v120[1 + 2 ]=v68[v120[3]];end v117=3;end if (v117==1) then v120={v33(),v33(),nil,nil};if (v118==0) then local v127=0;while true do if (v127==0) then v120[3]=v33();v120[4]=v33();break;end end elseif (v118==1) then v120[3]=v34();elseif (v118==2) then v120[3]=v34() -(2^16) ;elseif (v118==3) then local v134=0;while true do if (v134==0) then v120[3]=v34() -(2^16) ;v120[4]=v33();break;end end end v117=2;end if (0==v117) then v118=v31(v84,2,3);v119=v31(v84,4,6);v117=1;end if (v117==3) then if (v31(v119,3,3)==1) then v120[4]=v68[v120[4]];end v63[v82]=v120;break;end end end break;end end end for v85=1,v34() do v64[v85-1 ]=v39();end return v66;end local function v40(v70,v71,v72) local v73=v70[1];local v74=v70[2];local v75=v70[3];return function(...) local v87=v73;local v88=v74;local v89=v75;local v90=v38;local v91=878 -(282 + 595) ;local v92= -1;local v93={};local v94={...};local v95=v20("#",...) -1 ;local v96={};local v97={};for v108=0,v95 do if (v108>=v89) then v93[v108-v89 ]=v94[v108 + (1638 -(1523 + 114)) ];else v97[v108]=v94[v108 + 1 ];end end local v98=(v95-v89) + 1 ;local v99;local v100;while true do local v109=0;while true do if (0==v109) then v99=v87[v91];v100=v99[1];v109=1;end if (v109==1) then if (v100<=37) then if (v100<=18) then if (v100<=8) then if (v100<=3) then if (v100<=1) then if (v100>0) then local v135=v99[2];local v136=v97[v135 + 2 ];local v137=v97[v135] + v136 ;v97[v135]=v137;if (v136>0) then if (v137<=v97[v135 + 1 ]) then local v333=0;while true do if (v333==0) then v91=v99[3];v97[v135 + 3 ]=v137;break;end end end elseif (v137>=v97[v135 + 1 ]) then local v334=0;while true do if (v334==0) then v91=v99[3 + 0 ];v97[v135 + 3 ]=v137;break;end end end else v97[v99[2]]= #v97[v99[3]];end elseif (v100==2) then do return v97[v99[2]]();end else local v140=0;local v141;while true do if (v140==0) then v141=v99[2];v97[v141]=v97[v141](v21(v97,v141 + 1 ,v99[3]));break;end end end elseif (v100<=5) then if (v100>4) then if (v99[2]==v97[v99[5 -1 ]]) then v91=v91 + 1 ;else v91=v99[3];end else local v142=v99[2];local v143,v144=v90(v97[v142](v21(v97,v142 + 1 ,v92)));v92=(v144 + v142) -1 ;local v145=0;for v225=v142,v92 do v145=v145 + 1 ;v97[v225]=v143[v145];end end elseif (v100<=(1071 -(68 + 997))) then local v146=0;local v147;while true do if (v146==0) then v147=v99[2];v97[v147](v21(v97,v147 + (1271 -(226 + 1044)) ,v92));break;end end elseif (v100==7) then local v235=0;local v236;local v237;while true do if (v235==0) then v236=v99[2];v237=v97[v99[3]];v235=1;end if (v235==1) then v97[v236 + 1 ]=v237;v97[v236]=v237[v99[4]];break;end end else v97[v99[8 -6 ]]();end elseif (v100<=13) then if (v100<=(127 -(32 + 85))) then if (v100==9) then local v148=0;local v149;local v150;local v151;while true do if (v148==2) then if (v150>0) then if (v151<=v97[v149 + 1 ]) then v91=v99[3];v97[v149 + 3 ]=v151;end elseif (v151>=v97[v149 + 1 ]) then v91=v99[3];v97[v149 + 3 ]=v151;end break;end if (v148==1) then v151=v97[v149] + v150 ;v97[v149]=v151;v148=2;end if (v148==0) then v149=v99[2];v150=v97[v149 + 2 ];v148=1;end end else v97[v99[2 + 0 ]][v97[v99[3]]]=v97[v99[4]];end elseif (v100<=11) then v91=v99[3];elseif (v100>12) then local v238=v88[v99[3]];local v239;local v240={};v239=v18({},{[v7("\137\142\83\64\19\52\176","\52\214\209\58\46\119\81\200")]=function(v298,v299) local v300=v240[v299];return v300[1][v300[2]];end,[v7("\122\243\56\46\155\185\75\200\51\51","\208\37\172\86\75\236")]=function(v301,v302,v303) local v304=v240[v302];v304[1][v304[1 + 1 ]]=v303;end});for v306=1,v99[4] do local v307=0;local v308;while true do if (v307==1) then if (v308[1]==47) then v240[v306-1 ]={v97,v308[3]};else v240[v306-1 ]={v71,v308[3]};end v96[ #v96 + (2 -1) ]=v240;break;end if (0==v307) then v91=v91 + 1 ;v308=v87[v91];v307=1;end end end v97[v99[2]]=v40(v238,v239,v72);else do return;end end elseif (v100<=15) then if (v100>14) then v97[v99[2]]=v99[3]~=0 ;else local v156=v99[2];do return v21(v97,v156,v92);end end elseif (v100<=16) then local v157=0;local v158;while true do if (v157==0) then v158=v99[2];v97[v158](v21(v97,v158 + 1 ,v92));break;end end elseif (v100>(30 -13)) then local v242=v99[2];local v243=v97[v99[3]];v97[v242 + 1 ]=v243;v97[v242]=v243[v99[4]];else local v247=v99[2];local v248=v97[v247];local v249=v97[v247 + 2 ];if (v249>0) then if (v248>v97[v247 + 1 ]) then v91=v99[4 -1 ];else v97[v247 + 3 ]=v248;end elseif (v248<v97[v247 + 1 ]) then v91=v99[353 -(87 + 263) ];else v97[v247 + 3 ]=v248;end end elseif (v100<=27) then if (v100<=22) then if (v100<=20) then if (v100>(199 -(67 + 113))) then local v159=0;local v160;local v161;local v162;while true do if (v159==0) then v160=v99[2];v161=v97[v160];v159=1;end if (v159==1) then v162=v97[v160 + 2 ];if (v162>(0 + 0)) then if (v161>v97[v160 + 1 ]) then v91=v99[7 -4 ];else v97[v160 + 3 ]=v161;end elseif (v161<v97[v160 + 1 ]) then v91=v99[3];else v97[v160 + 3 ]=v161;end break;end end else v97[v99[2]]=v97[v99[3 + 0 ]]%v97[v99[4]] ;end elseif (v100>21) then if (v99[2]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[11 -8 ];end else local v164=0;local v165;local v166;while true do if (v164==0) then v165=v99[2];v166=v97[v165];v164=1;end if (v164==1) then for v335=v165 + 1 ,v99[955 -(802 + 150) ] do v15(v166,v97[v335]);end break;end end end elseif (v100<=24) then if (v100==23) then v97[v99[2]]=v97[v99[7 -4 ]][v99[4]];else v97[v99[3 -1 ]]=v97[v99[3]][v99[4]];end elseif (v100<=(19 + 6)) then local v171=0;local v172;while true do if (v171==0) then v172=v99[2];v97[v172]=v97[v172](v21(v97,v172 + 1 ,v92));break;end end elseif (v100>26) then local v251=v99[2];do return v97[v251](v21(v97,v251 + 1 ,v99[3]));end else local v252=v99[999 -(915 + 82) ];v97[v252]=v97[v252](v21(v97,v252 + (2 -1) ,v92));end elseif (v100<=32) then if (v100<=(17 + 12)) then if (v100==28) then v97[v99[2]]=v97[v99[3]]%v99[4 -0 ] ;else v97[v99[2]]=v99[3] + v97[v99[4]] ;end elseif (v100<=(1217 -(1069 + 118))) then local v175=0;local v176;local v177;local v178;while true do if (v175==1) then v178={};v177=v18({},{[v7("\150\130\230\133\168\172\165","\204\201\221\143\235")]=function(v336,v337) local v338=0;local v339;while true do if (v338==0) then v339=v178[v337];return v339[2 -1 ][v339[2]];end end end,[v7("\72\186\240\68\96\140\240\69\114\157","\33\23\229\158")]=function(v340,v341,v342) local v343=0;local v344;while true do if (v343==0) then v344=v178[v341];v344[1][v344[2]]=v342;break;end end end});v175=2;end if (v175==2) then for v345=1,v99[4] do local v346=0;local v347;while true do if (v346==1) then if (v347[1]==(9 + 38)) then v178[v345-(1 -0) ]={v97,v347[3]};else v178[v345-1 ]={v71,v347[3 + 0 ]};end v96[ #v96 + 1 ]=v178;break;end if (v346==0) then v91=v91 + (1 -0) ;v347=v87[v91];v346=1;end end end v97[v99[2]]=v40(v176,v177,v72);break;end if (v175==0) then v176=v88[v99[3]];v177=nil;v175=1;end end elseif (v100==(822 -(368 + 423))) then v97[v99[2]]=v97[v99[3]]%v99[12 -8 ] ;else v97[v99[20 -(10 + 8) ]]=v99[3];end elseif (v100<=34) then if (v100>(126 -93)) then if v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end else local v179=v99[444 -(416 + 26) ];local v180,v181=v90(v97[v179](v97[v179 + 1 ]));v92=(v181 + v179) -1 ;local v182=0;for v228=v179,v92 do local v229=0;while true do if (v229==0) then v182=v182 + 1 ;v97[v228]=v180[v182];break;end end end end elseif (v100<=35) then local v183=0;local v184;while true do if (v183==0) then v184=v99[2];do return v21(v97,v184,v92);end break;end end elseif (v100>36) then local v258=0;local v259;local v260;local v261;local v262;while true do if (v258==1) then v92=(v261 + v259) -1 ;v262=0;v258=2;end if (v258==0) then v259=v99[2];v260,v261=v90(v97[v259](v21(v97,v259 + 1 ,v92)));v258=1;end if (v258==2) then for v373=v259,v92 do v262=v262 + 1 ;v97[v373]=v260[v262];end break;end end else local v263=v99[2];v97[v263]=v97[v263]();end elseif (v100<=56) then if (v100<=46) then if (v100<=41) then if (v100<=39) then if (v100==38) then v97[v99[2]]=v97[v99[3]] + v99[4] ;elseif v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100==40) then if  not v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end else v97[v99[6 -4 ]]=v97[v99[3]];end elseif (v100<=43) then if (v100>42) then for v230=v99[2],v99[3] do v97[v230]=nil;end elseif (v97[v99[2]]==v99[4]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=44) then v97[v99[2]]=v97[v99[2 + 1 ]]%v97[v99[4]] ;elseif (v100==45) then local v268=0;local v269;local v270;local v271;local v272;while true do if (v268==1) then v92=(v271 + v269) -(1 -0) ;v272=0;v268=2;end if (v268==2) then for v376=v269,v92 do v272=v272 + 1 ;v97[v376]=v270[v272];end break;end if (v268==0) then v269=v99[2];v270,v271=v90(v97[v269](v21(v97,v269 + 1 ,v99[3])));v268=1;end end else v97[v99[2]]=v71[v99[3]];end elseif (v100<=51) then if (v100<=48) then if (v100==47) then v97[v99[2]]=v97[v99[3]];else local v191=0;local v192;local v193;local v194;local v195;while true do if (v191==2) then for v350=v192,v92 do local v351=0;while true do if (v351==0) then v195=v195 + (439 -(145 + 293)) ;v97[v350]=v193[v195];break;end end end break;end if (v191==1) then v92=(v194 + v192) -1 ;v195=0;v191=2;end if (v191==0) then v192=v99[2];v193,v194=v90(v97[v192](v21(v97,v192 + 1 ,v99[3])));v191=1;end end end elseif (v100<=49) then do return;end elseif (v100==50) then v97[v99[2]]=v99[3]~=0 ;else local v276=v99[2];local v277=v97[v276];local v278=v99[3];for v321=1,v278 do v277[v321]=v97[v276 + v321 ];end end elseif (v100<=53) then if (v100==52) then local v196=0;local v197;local v198;local v199;while true do if (v196==0) then v197=v99[432 -(44 + 386) ];v198=v97[v197];v196=1;end if (v196==1) then v199=v99[3];for v352=1487 -(998 + 488) ,v199 do v198[v352]=v97[v197 + v352 ];end break;end end else v97[v99[2]]=v71[v99[1 + 2 ]];end elseif (v100<=54) then local v202=0;local v203;local v204;while true do if (v202==0) then v203=v99[2];v204=v97[v203];v202=1;end if (v202==1) then for v355=v203 + 1 ,v92 do v15(v204,v97[v355]);end break;end end elseif (v100>55) then local v279=v99[2];do return v97[v279](v21(v97,v279 + 1 ,v99[3]));end else do return v97[v99[2]]();end end elseif (v100<=66) then if (v100<=61) then if (v100<=58) then if (v100==57) then if (v97[v99[2]]==v99[4]) then v91=v91 + 1 ;else v91=v99[3];end else v97[v99[2]]= #v97[v99[3]];end elseif (v100<=(49 + 10)) then local v206=v99[2];v97[v206]=v97[v206](v21(v97,v206 + 1 ,v99[775 -(201 + 571) ]));elseif (v100>(1198 -(116 + 1022))) then local v281=v99[8 -6 ];v97[v281]=v97[v281]();else v97[v99[2]]={};end elseif (v100<=63) then if (v100>62) then v97[v99[2]]();else v97[v99[2 + 0 ]]=v72[v99[10 -7 ]];end elseif (v100<=64) then v97[v99[2]]=v72[v99[3]];elseif (v100>(230 -165)) then if  not v97[v99[2]] then v91=v91 + (860 -(814 + 45)) ;else v91=v99[3];end else v97[v99[2]][v97[v99[3]]]=v99[4];end elseif (v100<=71) then if (v100<=(167 -99)) then if (v100>67) then local v212=v99[2];local v213,v214=v90(v97[v212](v97[v212 + 1 ]));v92=(v214 + v212) -1 ;local v215=0;for v232=v212,v92 do local v233=0;while true do if (v233==0) then v215=v215 + 1 ;v97[v232]=v213[v215];break;end end end else v97[v99[2]]={};end elseif (v100<=(4 + 65)) then local v217=0;local v218;local v219;while true do if (v217==1) then for v359=v218 + 1 ,v92 do v15(v219,v97[v359]);end break;end if (v217==0) then v218=v99[2];v219=v97[v218];v217=1;end end elseif (v100==(25 + 45)) then for v331=v99[2],v99[3] do v97[v331]=nil;end else v97[v99[2]][v97[v99[888 -(261 + 624) ]]]=v97[v99[4]];end elseif (v100<=(129 -56)) then if (v100==72) then v97[v99[2]][v97[v99[3]]]=v99[4];else v97[v99[2]]=v99[3];end elseif (v100<=74) then v97[v99[2]]=v97[v99[3]] + v99[4] ;elseif (v100==75) then v97[v99[1082 -(1020 + 60) ]]=v99[3] + v97[v99[4]] ;else v91=v99[3];end v91=v91 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--
